# Импортируем встроенную библиотеку для работы с временем.
import time
# Импортируем пользовательскую библиотеку для работы с клавиатурой.
# С помощью команды в консоли pip install keyboard.
import keyboard

# Создаем словарь в котором будет храниться база данных.
database = {}
# Назначаем команды для меню умолчанию.
main_command = 'help'
db_command = 'help'
# Считываем имя пользователя с консоли.
name = input('Как вас зовут? ')
# Выводим приветствие.
print(f'''
=====================================================================
Привет, {name}!
Я ваш бот-помощник. Я помогу вам вовремя поливать растения.
Я буду хранить график полива ваших растений и напоминать вам об этом.
=====================================================================
''')
# Начинаем бесконечный цикл приложения.
while True:
    # Проверка условий.
    # Если пользователь ввел help - выводим список команд основного меню.
    if main_command == 'help':
        print('''
=====================================================================
Для управления мной в основном меню, используйте следующие команды:
1 - Войти в меню редактирования графика полива.
2 - Запустить бота.
3 - Выйти из приложения.
help - Показать подсказку.
=====================================================================
''')
    # Получаем команду от пользователя.
    main_command = input('Введите команду: ')
    # Если пользователь ввел 1 - начинаем бесконечный цикл для редактирования базы данных.
    if main_command == '1':
        while True:
            # Проверка условий.
            # Если пользователь ввел help - выводим список команд для редактирования бд.
            if db_command == 'help':
                print('''
=====================================================================
Для управления мной в меню редактирования графика полива, используйте следующие команды:
1 - Добавить растение и установить график полива.
2 - Просмотреть график полива всех растений.
3 - Удалить растение из графика полива.
4 - Полностью очистить график полива.
5 - Выйти из меню редактирования графика полива растений.
help - Показать подсказку.
=====================================================================
''')
            # Получаем команду от пользователя.
            db_command = input('Введите команду: ')

            # Если пользователь ввел 1.
            if db_command == '1':
                # Считываем название растения.
                name = input('Введите название растения: ')
                # Добавляем название растения в бд с пустым списком времени полива.
                database[name] = []
                # Считываем количество поливок в неделю.
                water_count = int(input('Введите сколько раз в неделю вы хотите поливать растение: '))
                # Цикл от нуля до количества поливок, что добавить время столько раз сколько хочет пользователь.
                for i in range(0, water_count):
                    # Считываем день, час и минуту полива.
                    water_time = input('''
Введите день недели, час и минуту полива растения(через пробел) в таком формате:
Дни недели: Mon = Пн, Tue = Вт, Wed = Ср, Thu = Чт, Fri = Пт, Sat = Сб, Sun = Вс
Например: Mon 12 12 - значит в понедельник в 12 часов 12 минут:
''')
                    # Добавляем день, час и минуту полива к растению.
                    database[name].append(water_time)
                print('Растение успешно добавлено в график.')

            # Если пользователь ввел 2.
            elif db_command == '2':
                print(f'График полива растений:')
                # Цикл по элементам бд.
                for name, water_times in database.items():
                    # Выводим график полива всех растений.
                    print(f'Поливаем {name}: {', '.join(water_times)}.')

            # Если пользователь ввел 3.
            elif db_command == '3':
                # Считываем название растения для удаления его из словаря.
                name = input('Введите название растения которое нужно удалить из графика полива растений: ')
                # Удаляем элемент с ключом name.
                del database[name]
                print(f'{name} удален из графика полива растений.')

            # Если пользователь ввел 4.
            elif db_command == '4':
                # Очищаем словарь.
                database.clear()
                print('График полива растений полностью очищен.')

            # Если пользователь ввел 5.
            elif db_command == '5':
                # Возвращаем команде для основного меню значение help.
                main_command = 'help'
                # Возвращаем команде для редактирования базы данных значение help.
                db_command = 'help'
                print('Выход из режима редактирования графика полива растений.')
                # Прерываем работу цикла.
                break

    # Если пользователь ввел 2.
    elif main_command == '2':
        print('Бот начал свою работу.')
        print('Для выхода в основное меню - зажмите кнопку "ESC"')

        # Создаем пустой словарь в который отфильтруем базу данных так, что б боту было удобнее с ней работать.
        filtered_db = {}

        # Цикл по элементам базы данных.
        for name, water_times in database.items():
            # Цикл по элементам времени в каждом растении.
            for times in water_times:
                # Если такого времени нет в отфильтрованной базе данных.
                if times not in filtered_db:
                    # Добавляем время и присваиваем ему растение.
                    filtered_db[times] = [name]
                # Иначе добавляем растение к существующему времени.
                else:
                    filtered_db[times].append(name)

        # Копируем отфильтрованную базу данных в "график полива".
        schedule = filtered_db.copy()

        # Запускаем бесконечный цикл.
        while True:
            # Создаем условие, что при зажатии кнопки "ESC" останавливается работа бота.
            if keyboard.is_pressed("ESC"):
                # Возвращаем команде для основного меню значение help.
                main_command = 'help'
                print('Работа бота остановлена.')
                # Прерываем работу цикла.
                break

            # Записываем в переменную локальное время пользователя.
            time_now = time.strftime("%a %H %M")

            # Цикл по "графику полива". Работаем с его копией, что б цикл не выдал ошибку при удалении
            # выполненных задач из графика.
            for times, name in schedule.copy().items():
                # Если пришло время поливать растения.
                if time_now == times:
                    # Выводим название растений для полива.
                    print(f'Пришло время поливать: {', '.join(name)}.')
                    # Спрашиваем у пользователя полил ли он растения.
                    action = input(f'Для поливки растения(й) введите yes / no: ')
                    # Если пользователь полил растения. Выдаем пользователю позитивный ответ.
                    if action == 'yes':
                        print(f'Отлично! Вы полили: {', '.join(name)}. Я напомню вам о поливе в следующий раз.')
                        # Удаляем задачу из расписания.
                        del schedule[times]
                    else:
                        # Если не полил. Выводим "напоминающий" ответ.
                        print(f'Не забудьте полить: {', '.join(name)}. Я напомню вам о поливе в следующий раз.')
                        # Удаляем задачу из расписания.
                        del schedule[times]

            # Записываем в переменную локальное время пользователя(с секундами).
            check_restart_time = time.strftime("%a %H %M %S")
            # Если время совпадает с началом недели.
            if check_restart_time == 'Mon 00 00 00':
                # Обновляем "график полива".
                schedule = filtered_db.copy()

    # Если пользователь ввел 3.
    elif main_command == '3':
        print('Завершение работы.')
        # Прерываем работу цикла.
        break
